class WebGazer extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      blinked: false,
      x: null,
      y: null
    };
  }

  componentDidMount() {
    webgazer
      .setGazeListener(
        (data, elapsedTime) => {
          if (data == null) {
            return;
          }
          const { x, y } = data;
          const blinked = _.magic(
            data,
            "blinked"
          );
          this.setState(() => ({
            blinked,
            x,
            y
          }));
        }
      )
      .showPredictionPoints(true)
      .begin();
  }

  componentWillUnmount() {
    webgazer
      .showPredictionPoints(false)
      .clearGazeListener()
      .end();
  }

  render() {
    const {
      blinked,
      x,
      y
    } = this.state;
    return (
      <div>
        <div>{`[${x}, ${y}]`}</div>
        <div>
          {blinked
            ? "blinked!"
            : "(nothing)"}
        </div>
      </div>
    );
  }
}